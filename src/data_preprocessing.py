# -*- coding: utf-8 -*-
"""data_preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B3HtoJHBg5yheQj-SMPisB4wYuh4jFrL
"""

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

def preprocess_data(df, test_size=0.2):
    """
    Preprocess the dataset.

    Args:
        df: Input DataFrame
        test_size: Fraction of data to use for testing
    """
    # Check for missing values
    if df.isnull().any().any():
        raise ValueError("Dataset contains missing values")

    # Make a copy to avoid modifying original
    df = df.copy()

    # Convert 'Level' to numeric
    level_map = {'Low': 0, 'Medium': 1, 'High': 2}

    if 'Level' not in df.columns:
        raise ValueError("'Level' column not found in dataset")

    df['Level'] = df['Level'].map(level_map)

    # Split features and target
    X = df.drop('Level', axis=1)
    y = df['Level']

    # Split data
    X_train, X_test, y_train, y_test = train_test_split(
        X, y, test_size=test_size, random_state=42
    )

    # Scale features
    scaler = StandardScaler()
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test)

    return X_train, X_test, y_train, y_test, X_train_scaled, X_test_scaled, scaler, X